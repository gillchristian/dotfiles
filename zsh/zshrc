# ##############################################################################
#                                                                              #
# Load antibody plugins                                                        #
#                                                                              #
# Completion needs to load before some plugins                                 #
#                                                                              #
# By default 'compinit' checks ~/.zcompdump on every load.                     #
# This changes it to use chage and only do the check once every day. Which     #
# reduces the startup time significantly.                                      #
#                                                                              #
# From:  https://gist.github.com/ctechols/ca1035271ad134841284                 #
# Addapted by: https://carlosbecker.com/posts/speeding-up-zsh/                 #
#                                                                              #
# ##############################################################################
autoload -Uz compinit
if [[ -n ${ZDOTDIR:-${HOME}}/.zcompdump(#qN.mh+24) ]]; then
    compinit;
  else
    compinit -C;
fi;
source ~/.antibody_plugins.sh

# clenup promp to not see the flash of oh-my-zsh prompt before Purs loads
PROMPT=""

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# ################################################ #
#                                                  #
# Purs prompt (https://github.com/xcambar/purs)    #
#                                                  #
# ################################################ #

function zle-line-init zle-keymap-select {
  PROMPT=`~/dev/purs/target/release/purs prompt -k "$KEYMAP" -r "$?" --venv "${${VIRTUAL_ENV:t}%-*}"`
  zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

autoload -Uz add-zsh-hook

function _prompt_purs_precmd() {
  ~/dev/purs/target/release/purs precmd
}
add-zsh-hook precmd _prompt_purs_precmd

# ##################################################

export DOTFILES_DIR="$HOME/dev/dotfiles"

source ~/.zsh/aliases.zsh
source ~/.zsh/functions.zsh
source ~/.zsh/exports.zsh
# Functions, aliases & exports that shouldn't be in Git
if [ -f "$HOME/.zsh/private.zsh" ]; then source ~/.zsh/private.zsh; fi

# ############################################################################ #
#                                                                              #
# Depdendencies configuration                                                  #
#                                                                              #
# Sadly some programs want to have stuff in ~/.zshrc                           #
# (Instead of letting you place it in the file you want)                       #
# This is the "safe" space for that \o/                                        #
# Don't manually change anything after this line :)                            #
#                                                                              #
# ############################################################################ #

# Load fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Nix :)
if [ -e /home/bb8/.nix-profile/etc/profile.d/nix.sh ]; then . /home/bb8/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/bb8/bin/google-cloud-sdk/path.zsh.inc' ]; then . '/home/bb8/bin/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/bb8/bin/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/bb8/bin/google-cloud-sdk/completion.zsh.inc'; fi

export PATH="$HOME/.subilo/bin:$PATH"

# fnm
export PATH="/home/bb8/.fnm:$PATH"
eval "`fnm env`"

# Dir env runs when entering a directory
if [ "$(cat ~/.direnvswitch)" = "On" ]; then
  eval "$(direnv hook zsh)"
fi

[ -f "/home/bb8/.ghcup/env" ] && source "/home/bb8/.ghcup/env" # ghcup-env
